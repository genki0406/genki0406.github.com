<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Genki Note]]></title>
  <link href="http://genki0406.github.com/atom.xml" rel="self"/>
  <link href="http://genki0406.github.com/"/>
  <updated>2012-07-16T22:59:46+09:00</updated>
  <id>http://genki0406.github.com/</id>
  <author>
    <name><![CDATA[Genki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PaaSのクローラーサービスmitsubachiを使ってみる]]></title>
    <link href="http://genki0406.github.com/blog/2012/07/16/mitsubachi/"/>
    <updated>2012-07-16T20:25:00+09:00</updated>
    <id>http://genki0406.github.com/blog/2012/07/16/mitsubachi</id>
    <content type="html"><![CDATA[<p>先日のAWS鹿児島勉強会で<a href="http://www.miningbrownie.co.jp/">株式会社マイニングブラウニー</a>の代表得上さんが講師として来てくれました。
AWSのサービスDynamoDBについて色々教えてくれたんですが、その後個人的にお話する機会があり得上さんの会社で展開しているクローラーサービスの話を聞いて、面白そうだったので触ってみました。</p>

<p>今回触ったのが<a href="http://www.mushikago.org/mitsubachi/">mitsubachi</a>というサービスなんですが、PaaS型のクローラーサービスです。</p>

<p>クローリングの内容を記述したスクリプトを作成し、mitsubachi上にデプロイしておけば、後は実行するだけで勝手に情報を収集してきてくれるという優れもの。環境構築などは一切いりません。</p>

<h2>まずはユーザー登録しましょう</h2>

<p>mitsubachiは従量課金制のサービスになっています、まずはユーザー登録してAPIキーとシークレットキーを取得しましょう。登録は<a href="https://member.mushikago.org/entry">ここから</a></p>

<h2>クローラーを動かすまでのステップ</h2>

<p>ユーザー登録が終わったら早速動かしてやるーーー！！とその前にmitsubachi上でクローラーを動かす時の大まかなステップを確認。</p>

<ul>
<li>mitsubachi上にプロジェクトを作成</li>
<li>実行するスクリプトをプロジェクト上にデプロイ</li>
<li>デプロイしたスクリプトを実行</li>
<li>実行が終わったか確認</li>
<li>結果の取得</li>
</ul>


<h2>クローラーを動かそう！</h2>

<p>プロジェクトを作る方法はCUIツールを使う方法と、SDK使って自分で書く方法と２種類あります。これについてはもう既に分かりやすいドキュメントが揃っているのでそっちを見たほうが早いです。</p>

<ul>
<li><a href="http://docs.mushikago.org/services/mitsubachi/guide/getstarted-guide.html">CUIツールを使ってやってみる</a></li>
<li><a href="http://docs.mushikago.org/services/mitsubachi/guide/sample.html">SDKでやってみる</a></li>
</ul>


<p>僕は最初CUIツール使ってやった後に、SDKでやりました。ちなみに言語はPHPを選択しました。</p>

<h2>SDKサンプルソースを修正し、YahooのTOPニュースを持ってきてみる</h2>

<p>ほぼサンプルで記載されているものと同じですが、こんな感じで書いてみました。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">/sample.php</span>
</span><span class='line'>
</span><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">require_once</span> <span class="s1">&#39;mushikago-sdk/sdk.class.php&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;mushikago-sdk/services/mitsubachi.php&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//mitsubachi APIのクライアントを作成します。</span>
</span><span class='line'><span class="nv">$mitsubachi</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">MushikagoMitsubachiClient</span><span class="p">();</span>
</span><span class='line'><span class="nv">$project_name</span> <span class="o">=</span> <span class="s1">&#39;yahoo&#39;</span><span class="p">;</span> <span class="c1">//プロジェクト名</span>
</span><span class='line'><span class="nv">$script_name</span> <span class="o">=</span> <span class="s1">&#39;script_sample.rb&#39;</span><span class="p">;</span> <span class="c1">// スクリプトファイルの保存名</span>
</span><span class='line'><span class="nv">$file</span> <span class="o">=</span> <span class="nb">dirname</span><span class="p">(</span><span class="k">__FILE__</span><span class="p">)</span><span class="o">.</span><span class="s1">&#39;/script_sample.rb&#39;</span><span class="p">;</span> <span class="c1">// デプロイするスクリプトファイル、PHPで書こうと思ったけどRubyしか用意されてない？</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/********************************</span>
</span><span class='line'><span class="sd">* 1. 準備-1：</span>
</span><span class='line'><span class="sd">* スクリプトやクロール結果を</span>
</span><span class='line'><span class="sd">* 保存する領域 (プロジェクト)を作成します。</span>
</span><span class='line'><span class="sd">********************************/</span>
</span><span class='line'><span class="nv">$stdout</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">//標準出力(0:しない 1:する)。rubyスクリプトの puts などの出力に使用します。</span>
</span><span class='line'><span class="nv">$stderr</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">//標準エラー出力(0:しない 1:する)。システムエラーやスクリプトエラーのトレースログ出力に使用します。</span>
</span><span class='line'><span class="nv">$system_log</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">//システムログ出力フラグ(0:しない 1:する)。訪れたウェブページのアクセスログ出力に使用します。</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$mitsubachi</span><span class="o">-&gt;</span><span class="na">create_project</span><span class="p">(</span><span class="nv">$project_name</span><span class="p">,</span>  <span class="nv">$stdout</span><span class="p">,</span>  <span class="nv">$stderr</span><span class="p">,</span>  <span class="nv">$system_log</span><span class="p">);</span>
</span><span class='line'><span class="nb">var_dump</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/********************************</span>
</span><span class='line'><span class="sd">* 2. 準備-2：</span>
</span><span class='line'><span class="sd">* 実行するスクリプトをプロジェクト上に</span>
</span><span class='line'><span class="sd">* デプロイ(アップロード)します。</span>
</span><span class='line'><span class="sd">********************************/</span>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$mitsubachi</span><span class="o">-&gt;</span><span class="na">deploy_script</span><span class="p">(</span><span class="nv">$project_name</span><span class="p">,</span>  <span class="nv">$script_name</span><span class="p">,</span>  <span class="nv">$file</span><span class="p">);</span>
</span><span class='line'><span class="nb">var_dump</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/********************************</span>
</span><span class='line'><span class="sd">* 3. クロールリクエスト：</span>
</span><span class='line'><span class="sd">* デプロイしたスクリプトを実行します。</span>
</span><span class='line'><span class="sd">********************************/</span>
</span><span class='line'><span class="nv">$url</span> <span class="o">=</span> <span class="s2">&quot;http://www.yahoo.co.jp/&quot;</span><span class="p">;</span> <span class="c1">// クロールをスタートするページのURL</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$mitsubachi</span><span class="o">-&gt;</span><span class="na">fetch_http</span><span class="p">(</span><span class="nv">$project_name</span><span class="p">,</span>  <span class="nv">$url</span><span class="p">,</span>  <span class="nv">$script_name</span><span class="p">);</span>
</span><span class='line'><span class="nb">var_dump</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/********************************</span>
</span><span class='line'><span class="sd">* 4. 実行中の処理数を取得：</span>
</span><span class='line'><span class="sd">* プロジェクト内で実行している処理の数を問い合わせます。</span>
</span><span class='line'><span class="sd">* 処理がすべて完了するとゼロが返却されます。</span>
</span><span class='line'><span class="sd">********************************/</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="k">true</span><span class="p">){</span>
</span><span class='line'>  <span class="nb">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$mitsubachi</span><span class="o">-&gt;</span><span class="na">queues_project</span><span class="p">(</span><span class="nv">$project_name</span><span class="p">);</span>
</span><span class='line'>  <span class="nb">var_dump</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nv">$result</span><span class="o">-&gt;</span><span class="na">response</span><span class="o">-&gt;</span><span class="na">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span> <span class="c1">// カウントが0になり、すべての処理が終わるまで無限ループ</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sd">/********************************</span>
</span><span class='line'><span class="sd">* 5. 作成したcsvファイルの保存先URL取得：</span>
</span><span class='line'><span class="sd">* プロジェクト上に作成されたcsvファイルの保存先URLを</span>
</span><span class='line'><span class="sd">* 取得します。</span>
</span><span class='line'><span class="sd">********************************/</span>
</span><span class='line'><span class="nv">$file_name</span> <span class="o">=</span> <span class="s1">&#39;information.csv&#39;</span><span class="p">;</span> <span class="c1">// csvファイル名</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$mitsubachi</span><span class="o">-&gt;</span><span class="na">get_resource</span><span class="p">(</span><span class="nv">$project_name</span><span class="p">,</span>  <span class="nv">$file_name</span><span class="p">);</span>
</span><span class='line'><span class="nb">var_dump</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/********************************</span>
</span><span class='line'><span class="sd">* 6. 取得したURLからファイルをダウンロード：</span>
</span><span class='line'><span class="sd">* csvファイルをダウンロードします。</span>
</span><span class='line'><span class="sd">********************************/</span>
</span><span class='line'><span class="nv">$csv</span> <span class="o">=</span> <span class="nv">$result</span><span class="o">-&gt;</span><span class="na">response</span><span class="o">-&gt;</span><span class="na">url</span><span class="p">;</span> <span class="c1">// 2.で取得したcsvファイルの保存先URL</span>
</span><span class='line'><span class="nv">$file_name</span> <span class="o">=</span> <span class="nb">dirname</span><span class="p">(</span><span class="k">__FILE__</span><span class="p">)</span><span class="o">.</span><span class="s1">&#39;/information.csv&#39;</span><span class="p">;</span> <span class="c1">// 保存するcsvファイル名</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$data</span> <span class="o">=</span> <span class="nb">file_get_contents</span><span class="p">(</span><span class="nv">$csv</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nb">file_put_contents</span><span class="p">(</span><span class="nv">$file_name</span><span class="p">,</span>  <span class="nv">$data</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">script_sample</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mitsubachi.rb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">###</span>
</span><span class='line'><span class="c1"># CSVファイルを作成する一時ファイルを作成します。</span>
</span><span class='line'><span class="c1">###</span>
</span><span class='line'><span class="n">temp_file</span> <span class="o">=</span> <span class="n">mitsubachi</span><span class="o">::</span><span class="no">TemporaryFile</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'><span class="n">root</span> <span class="o">=</span> <span class="vg">$e</span><span class="o">.</span><span class="n">getRootNode</span>
</span><span class='line'><span class="n">root</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;ul.emphasis a&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>  <span class="n">data</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="n">data</span> <span class="o">&lt;&lt;</span> <span class="n">a</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>  <span class="n">data</span> <span class="o">&lt;&lt;</span> <span class="n">a</span><span class="o">.</span><span class="n">attr</span><span class="o">[</span><span class="s1">&#39;href&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">temp_file</span><span class="o">.</span><span class="n">write_csv</span> <span class="n">data</span> <span class="c1"># 一時ファイルにCSVのデータを書き込みます。</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="vg">$e</span><span class="o">.</span><span class="n">create_mitsubachi_client</span>  <span class="c1"># mitsubachi APIを操作するクライアントを作成します。</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">simple_resource_store</span><span class="p">(</span><span class="n">temp_file</span><span class="o">.</span><span class="n">file</span><span class="p">,</span>  <span class="s1">&#39;information.csv&#39;</span><span class="p">,</span>  <span class="s1">&#39;text/plain;&#39;</span><span class="p">)</span> <span class="c1"># ストレージ領域に保存します。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>後は実行するだけ</h2>

<p>ソースを書き終えたら早速ターミナルで実行！</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php sample.php</span></code></pre></td></tr></table></div></figure>


<p>するとsample.phpと同じ階層にinformation.csvが作成され、クローリング結果が記載されているではありませんか！ｽｹﾞ━━━━━━ヽ(ﾟДﾟ)ﾉ━━━━━━!!!!
いやはや、これ使えばweb上にあるデータなんでもかんでも取りたい放題ですね。素晴らしい。</p>

<h2>Mysqlに突っ込もうとしたけど。。</h2>

<p>調子に乗った僕はcsvでは飽きたらず、DBに結果を突っ込むことにしました。これでweb上のすべてのデータをデータベース化してやる！！
ちなみにmitsubachiはRDBMSとの連携を<a href="http://docs.mushikago.org/mitsubachi/scripting/ruby/frames.html">サポート</a>してます。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># script_sample.rb</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mitsubachi.rb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">conn</span> <span class="o">=</span> <span class="no">Mitsubachi</span><span class="o">::</span><span class="no">RDBMS</span><span class="o">.</span><span class="n">new_connection</span><span class="p">(</span><span class="s1">&#39;mysql://ホスト名/&#39;</span><span class="p">,</span> <span class="s1">&#39;ユーザー名&#39;</span><span class="p">,</span> <span class="s1">&#39;パスワード&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">stmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">create_statement</span>
</span><span class='line'><span class="n">stmt</span><span class="o">.</span><span class="n">execute_query</span><span class="p">(</span><span class="s1">&#39;use yahoo&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">root</span> <span class="o">=</span> <span class="vg">$e</span><span class="o">.</span><span class="n">getRootNode</span>
</span><span class='line'><span class="n">root</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;ul.emphasis a&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># stmt.execute_query(&#39;insert into yahoo(name, link) values(&quot;&#39; + a.text + &#39;&quot;, &quot;&#39; + a.attr[&#39;href&#39;] + &#39;&quot;)&#39;)</span>
</span><span class='line'>  <span class="c1"># update及びinsertの時はexecute_updateを使う</span>
</span><span class='line'>  <span class="n">stmt</span><span class="o">.</span><span class="n">execute_update</span><span class="p">(</span><span class="s1">&#39;insert into yahoo(name, link) values(&quot;&#39;</span> <span class="o">+</span> <span class="n">a</span><span class="o">.</span><span class="n">text</span> <span class="o">+</span> <span class="s1">&#39;&quot;, &quot;&#39;</span> <span class="o">+</span> <span class="n">a</span><span class="o">.</span><span class="n">attr</span><span class="o">[</span><span class="s1">&#39;href&#39;</span><span class="o">]</span> <span class="o">+</span> <span class="s1">&#39;&quot;)&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">stmt</span><span class="o">.</span><span class="n">close</span>
</span><span class='line'><span class="n">conn</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>


<p>ふふふ、これでWeb上のすべてのデータは俺のものだ！(ΦωΦ)ﾌﾌﾌ
しかし、実行してみるとスクリプトエラー。。。コネクション作る所でコケてるっぽい。。ターミナルからは普通につながるのになぜ。。あとで得上さんに聞いてみよ。</p>

<h3>追記</h3>

<p>得上さんから回答もらいました、update及びinsertの時はexecute_updateを使えばいいとのこと、試して見ると無事Mysqlにデータが入りました！やったね！</p>

<h2>ひと通り触ってみた感想とか</h2>

<p>環境構築せずにスクリプトだけ書いて、ぱっとWeb上からデータを持ってこれるのはすごいですね。今回紹介しませんでしたが、なんと人工知能を持ってるhanamgriというサービスもありまして。これを使えば解析先のHPのレイアウトが変わってもデータ持ってこれちゃうみたいです。パないですね。ただ使っていて何点か改善してほしい点もあったので記載しておきます。</p>

<ul>
<li>スクリプトのデプロイが面倒くさい(gitでできるようにして欲しい。。)</li>
<li>デバッグしにくい(今回もRDBMSでこけたが、例外が発生しましたとしか記載されておらず、どの行でどんなエラーが起きてるのかわからない)</li>
</ul>


<p>得上さん良ければ改善をお願いします(._.)発展途上という感じですが、人工知能も含めかなり可能性を感じるサービスでした。web上のデータを好きに持ってこれるとなれば、これはすごいことですよね。データを解析して二次加工するとか、ビジネスになりそうな匂いがぷんぷんします。興味がある方は是非触って見てください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MeteorでS3にファイルをアップロードしてみる]]></title>
    <link href="http://genki0406.github.com/blog/2012/05/28/meteor-file-upload/"/>
    <updated>2012-05-28T01:10:00+09:00</updated>
    <id>http://genki0406.github.com/blog/2012/05/28/meteor-file-upload</id>
    <content type="html"><![CDATA[<p>MeteorでS3にファイルアップロードしてみた。</p>

<p>MeteorはリアルタイムなWebアプリを作ることを前提に設計されているので、そもそもルーティングという考え方がない。
URLに対してリクエストを送るのではなく、 サーバー側に実装したメソッドをクライアントから直接Callする。</p>

<p>ここでまず問題になるのが、今までのようにPOST用のフォームを作ってサーバーにファイルを送るというやり方ができないということ。
そこで今回作ったのは、HTML5のFile APIを使い、ブラウザ側でDataURL形式でファイルを読み込み、
それをサーバー側に実装したメソッドの引数に渡して呼び出し、
S3にアップロードするというもの。</p>

<h2>実装</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>/file_upload.html
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>MeteorでFileUpload<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;template</span> <span class="na">name=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>ファイルアップ！！<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">&quot;read_button&quot;</span> <span class="na">type=</span><span class="s">&quot;file&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/template&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>普通にMeteorの書き方でHTMLを用意する。
ファイルアップ用にfileのinputを用意。
formでPOSTするわけではないのでformタグは不要。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="err">/file_upload.coffee</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="nx">Meteor</span><span class="p">.</span><span class="nx">is_client</span>
</span><span class='line'>  <span class="nx">Template</span><span class="p">.</span><span class="nx">main</span><span class="p">.</span><span class="nx">events</span> <span class="o">=</span>
</span><span class='line'>    <span class="s1">&#39;change #read_button&#39;</span><span class="o">:</span> <span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>      <span class="nx">file</span> <span class="o">=</span> <span class="nx">evt</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FileReader</span>
</span><span class='line'>      <span class="nx">reader</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="p">((</span><span class="nx">file</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>          <span class="nx">Meteor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="s2">&quot;file_upload&quot;</span><span class="p">,</span> <span class="nx">file</span><span class="p">,</span> <span class="nx">evt</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">)</span>
</span><span class='line'>      <span class="p">)(</span><span class="nx">file</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">reader</span><span class="p">.</span><span class="nx">readAsDataURL</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>read_buttonにchangeイベントをバインド。
イベント発生時にファイルの中身をFileReaderを使いDataURL形式で読み取る。</p>

<p>読み取りが終わった時に呼ばれるFileReaderのonloadイベントに、
サーバー側のメソッドfile_uploadをファイル情報とFileReaderで読み取った
DataURLを渡してCall。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="err">/file_upload.coffee</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="nx">Meteor</span><span class="p">.</span><span class="nx">is_server</span>
</span><span class='line'>  <span class="nx">require</span> <span class="o">=</span> <span class="nx">__meteor_bootstrap__</span><span class="p">.</span><span class="nx">require</span>
</span><span class='line'>  <span class="nx">knox</span> <span class="o">=</span> <span class="nx">require</span> <span class="s2">&quot;knox&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">Meteor</span><span class="p">.</span><span class="nx">methods</span><span class="p">(</span>
</span><span class='line'>    <span class="nx">file_upload</span><span class="o">:</span><span class="p">(</span><span class="nx">file</span><span class="p">,</span> <span class="nx">stream</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">client</span> <span class="o">=</span> <span class="nx">knox</span><span class="p">.</span><span class="nx">createClient</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">key</span><span class="o">:</span> <span class="s2">&quot;key&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">secret</span><span class="o">:</span> <span class="s2">&quot;secretKey&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">bucket</span><span class="o">:</span> <span class="s2">&quot;bucketName&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">req</span> <span class="o">=</span> <span class="nx">client</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">file</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;Content-Length&quot;</span><span class="o">:</span> <span class="nx">file</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;Content-Type&quot;</span><span class="o">:</span> <span class="nx">file</span><span class="p">.</span><span class="nx">type</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">req</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;response&quot;</span><span class="p">,</span> <span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span>
</span><span class='line'>      <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">req</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="k">new</span> <span class="nx">Buffer</span><span class="p">(</span><span class="nx">stream</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">stream</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;;base64,&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="mi">8</span><span class="p">,</span> <span class="nx">stream</span><span class="p">.</span><span class="nx">size</span><span class="p">),</span> <span class="s2">&quot;base64&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>あとはknoxというnode.jsのs3用ライブラリを使い、S3にアップロード。</p>

<p>Base64でデータが来るのでデコードしてるところがポイント。
FileReaderではBinaryでもデータを読み取れるので、最初はそっちで試していたが
どうしてもうまくいかないので、base64でエンコードされるDataURLにした。</p>

<h2>注意</h2>

<p>FileReaderを使っているので、FileReaderが実装されているブラウザじゃないと動きません。
coffeeScriptで書いてるのでMeteor add coffeescriptするのを忘れずに。
後は<a href="https://github.com/LearnBoost/knox">knox</a>をインストールするのを忘れずに。<a href="http://genki0406.github.com/blog/2012/05/27/meteor-require/">MeteorでNode.jsの外部ライブラリを使う方法</a></p>

<h2>まとめ</h2>

<p>書いてみると結構簡単だけど、ここまで来るのに結構時間がかかった。</p>

<p>そもそもファイルってformからしか送れないと思ってたので、
最初は<a href="http://aws.amazon.com/articles/1434">S3にHTMLだけでファイルアップする方法</a>でやろうかと思ったけど、それでは画面遷移が
発生するのでリアルタイムアプリとしてはイケてない。</p>

<p>XMLHttpRequest使って送る方法も見つけたけど、Meteorにルーティング機能がないので
リクエスト先のURLをそもそも作れない。。。（　´・ω・）</p>

<p>そこでたどり着いたのでMeteor.methodsですね。
これにファイルのバイナリデータを渡せばいけるんじゃないかと！
時間かかった分動いたときはちょっと感動しました(/ω＼)</p>

<p>余談ですが、HTML5のFile APIすごいですね。ブラウザ側でバイナリで読み取ったりできるようになるとは。。
そのうちブラウザだけで画像加工したりできるようになるんでしょうね。</p>

<h2>参考サイト</h2>

<ul>
<li><a href="http://tmlife.net/programming/javascript/html5-file-api-file-read.html">HTML5 File API を使ってファイル読み込み</a></li>
<li><a href="http://www.html5rocks.com/ja/tutorials/file/dndfiles/">JAVASCRIPT で FILE API を使用してファイルを読み取る</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MeteorでNode.jsの外部ライブラリを使う方法]]></title>
    <link href="http://genki0406.github.com/blog/2012/05/27/meteor-require/"/>
    <updated>2012-05-27T22:00:00+09:00</updated>
    <id>http://genki0406.github.com/blog/2012/05/27/meteor-require</id>
    <content type="html"><![CDATA[<p>Meteorで外部ライブラリ、node modulesを使ったのでそのメモ
結論からいうと調べた感じではやり方は２つ。</p>

<h2>publicフォルダにインストールする</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/.meteor
</span><span class='line'>/client
</span><span class='line'>/server
</span><span class='line'>/public
</span><span class='line'> /node_modules←ここにインストールする</span></code></pre></td></tr></table></div></figure>


<p>publicフォルダはその名の通りpublicなフォルダなので
セキュリティ的に微妙ですね。。。
ただここにpackage.json置いてソース管理できるというメリットはあります
serverフォルダに置ければ一番いいんですが、残念ながら置いてもうまく動かないようです</p>

<h2>Meteorのlibフォルダに直接インストールする</h2>

<p>ここに突っ込みます
※自分の環境はMacです</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/usr/local/meteor/lib/node_modules</span></code></pre></td></tr></table></div></figure>


<p>すると.meteorの下にここへのシンボリックリンクがあるので
自動で読み込まれます。
ソース管理が別々になってしまうというのはデメリットですが
個人的にpublicに置くよりはいいと思ったので、今回はこっちを採用</p>

<h2>require is not definedになる。。。</h2>

<p>デフォルトではrequire使えないみたいですね。
以下のように書いてあげましょう。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require = __meteor_bootstrap__.require
</span><span class='line'>knox = require "knox"</span></code></pre></td></tr></table></div></figure>


<p>※coffeescriptで書いてます</p>

<h2>感想とか</h2>

<p>Meteorを触るようになって、日本語の情報が全然ないので。
普通に英語のサイトを検索するようになりました。
ドキュメントも英語のものをGoogle翻訳で一生懸命翻訳して
なんとか読んでます。
昔は英語の文章見るだけでアレルギー出てたんですが
最近はあまり苦にならなくなってきました。
この勢いで英語バリバリ読めるようになれるといいな！(｀・ω・´)</p>

<h2>参考サイト</h2>

<ul>
<li><a href="http://stackoverflow.com/questions/tagged/meteor?sort=newest&amp;pagesize=15">Stack Overflow</a></li>
<li><a href="http://stackoverflow.com/questions/10476170/how-can-i-deploy-node-modules-in-a-meteor-app-on-meteor-com">How can I deploy node modules in a Meteor app on meteor.com?</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteorのインストールで Failed dependencies]]></title>
    <link href="http://genki0406.github.com/blog/2012/04/30/meteor-install-error/"/>
    <updated>2012-04-30T22:20:00+09:00</updated>
    <id>http://genki0406.github.com/blog/2012/04/30/meteor-install-error</id>
    <content type="html"><![CDATA[<p>今流行のNode.jsのフレームワークMeteorでアプリを構築することになったので
早速サーバーにインストールしたが、以下のエラーが出て入らない。。。
ローカルのMacにはすんなり入ったのに。。。。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Installing /tmp/meteor-install-waQ1606/meteor-0.3.5-1.x86_64.rpm
</span><span class='line'>error: Failed dependencies:
</span><span class='line'>   libc.so.6(GLIBC_2.6)(64bit) is needed by meteor-0.3.5-1.x86_64
</span><span class='line'>   libc.so.6(GLIBC_2.7)(64bit) is needed by meteor-0.3.5-1.x86_64
</span><span class='line'>   libc.so.6(GLIBC_2.9)(64bit) is needed by meteor-0.3.5-1.x86_64
</span><span class='line'>   libstdc++.so.6(GLIBCXX_3.4.9)(64bit) is needed by meteor-0.3.5-1.x86_64
</span><span class='line'>Installation failed.</span></code></pre></td></tr></table></div></figure>


<h2>原因はGlibc</h2>

<p>調べてみるとどうやらGlibcというCの標準ライブラリが古いっぽい。
ちなみにOSのバージョンはCentOS 5.6。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum update glibc</span></code></pre></td></tr></table></div></figure>


<p>とかしてもupdateされない。
んー、どうすればいいんや。
このライブラリは根幹の物っぽいので、CentOSのバージョンを上げることを決意。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum update</span></code></pre></td></tr></table></div></figure>


<p>でバージョンアップされると書いてあるが、updateされない。。
なんでやー、と思って調べてたら、どうやらyumのリポジトリの設定がダメっぽい。
これを他のサイトを参考に以下のように変更。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/yum.repos.d/CentOS-Base.repo
</span><span class='line'>
</span><span class='line'>[base]
</span><span class='line'>name=CentOS-$releasever - Base
</span><span class='line'>#name = none
</span><span class='line'>baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/
</span><span class='line'>#baseurl = http://mirror.rightscale.com/centos/5.6/os/x86_64/archive/latest/
</span><span class='line'>failovermethod=priority
</span><span class='line'>gpgcheck=1
</span><span class='line'>enabled=1
</span><span class='line'>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5
</span><span class='line'>
</span><span class='line'>[addons]
</span><span class='line'>name=CentOS-$releasever - Updates
</span><span class='line'>#name = none
</span><span class='line'>baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/
</span><span class='line'>#baseurl = http://mirror.rightscale.com/centos/5.6/addons/x86_64/archive/latest/
</span><span class='line'>failovermethod=priority
</span><span class='line'>gpgcheck=1
</span><span class='line'>enabled=1
</span><span class='line'>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5
</span><span class='line'>
</span><span class='line'>[centosplus]
</span><span class='line'>name=CentOS-$releasever - Plus
</span><span class='line'>#name = none
</span><span class='line'>baseurl=http://mirror.centos.org/centos/$releasever/centosplus/$basearch/
</span><span class='line'>#baseurl = http://mirror.rightscale.com/centos/5.6/centosplus/x86_64/archive/latest/
</span><span class='line'>failovermethod=priority
</span><span class='line'>gpgcheck=1
</span><span class='line'>enabled=1
</span><span class='line'>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5
</span><span class='line'>
</span><span class='line'>[extras]
</span><span class='line'>name=CentOS-$releasever - Extras
</span><span class='line'>#name = none
</span><span class='line'>baseurl=http://mirror.centos.org/centos/$releasever/extras/$basearch/
</span><span class='line'>#baseurl = http://mirror.rightscale.com/centos/5.6/extras/x86_64/archive/latest/
</span><span class='line'>failovermethod=priority
</span><span class='line'>gpgcheck=1
</span><span class='line'>enabled=1
</span><span class='line'>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5
</span><span class='line'>
</span><span class='line'>[updates]
</span><span class='line'>name=CentOS-$releasever - Updates
</span><span class='line'>#name = none
</span><span class='line'>baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/
</span><span class='line'>#baseurl = http://mirror.rightscale.com/centos/5.6/updates/x86_64/archive/latest/
</span><span class='line'>failovermethod=priority
</span><span class='line'>gpgcheck=1
</span><span class='line'>enabled=1
</span><span class='line'>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5
</span><span class='line'>
</span><span class='line'>[epel]
</span><span class='line'>name = none
</span><span class='line'>baseurl = http://mirror.rightscale.com/epel/5/x86_64/archive/latest/
</span><span class='line'>failovermethod=priority
</span><span class='line'>gpgcheck=1
</span><span class='line'>enabled=1
</span><span class='line'>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPE</span></code></pre></td></tr></table></div></figure>


<p>そして、再度Meteorのインストールを試みる！
でもやっぱりダメ。。。(´；ω；｀)
この時点でCentOSのバージョンが5.8、Glibcのバージョンは2.5。
あと0.1足りない。。。</p>

<h2>まとめ</h2>

<p>CentOSを6系にあげないとダメなのかも。
6系は調べたらクリーンインストールしないとダメっぽいからやりたくないんだが。
誰か5系でGlibcのバージョンを2.6以上に上げたことある方やり方を教えて下さい(人∀・)ﾀﾉﾑ</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KagoHack 第2回に参加してきました]]></title>
    <link href="http://genki0406.github.com/blog/2012/04/29/kagohack/"/>
    <updated>2012-04-29T12:26:00+09:00</updated>
    <id>http://genki0406.github.com/blog/2012/04/29/kagohack</id>
    <content type="html"><![CDATA[<p>KagoHackという鹿児島のハッカソンイベントに参加してきました。
このイベントは</p>

<ul>
<li>「鹿児島から世界を目指す」アプリやサービスを！</li>
<li>「学んで遊んで作ってみよう」</li>
</ul>


<p>をテーマに物作りが好きな人が集まって、短期間で物を作ってしまおうというイベントです。
個人的に今鹿児島で一番熱いIT系のイベントだと思ってます。
運営の皆様、参加者の皆様楽しい時間をありがとうございました。</p>

<h2>今回のお題はスパルタンX!</h2>

<p>今回のお題はファミコンゲームのスパルタンXの復刻版を、 鹿児島っぽい感じで作ってしまおうという物。
チームを３つにわけ、Unity版、Corona版、JavaScript版を作りました。
UnityとCoronaは県外から講師の方に来ていただいて、教えてもらいながら作りました。
ちなみに僕はCoronaチームでした。時間があればUnityも学びたかったな〜。</p>

<h4>完成したJavaScript版がこれ:</h4>

<p><img src="http://genki0406.github.com/images/spartanX_javascript.png">
<a href="http://chaba.sakura.ne.jp/kg/">実際の動作はこのページにアクセスしてください</a><br />
<em>※ちなみにこれはJavaScript職人のChabaさんがプログラム部分は全て一人で作りました、Chabaさんすげーっす。。</em></p>

<p>結構な完成度じゃないですか？(/ω＼)</p>

<p>画像はもちろん、音楽まで全てオリジナルです。
主人公は今回のハッカソンの場所を提供していただいた、ワークスペースの管理人です。
鹿児島色を出すために敵キャラが白熊だったり、何故か開発者の敵という事でIE6マンが出て来たり。。
途中のキェーという声は鹿児島の古流剣術である示現流の試合の声から抜き出して来てたり。。
ファミコンっぽさを出すために、敵キャラは全て8ビットでデザインしてあったり。。
突っ込みどころも満載で、地味に色んな所にこだわってたりストーリーがあったりします。
敵キャラを8ビットでデザインしたデザイナーさんはその後、世界が全て8ビットで見えるようになってしまったそうです(；・∀・)</p>

<h2>僕が作ったもの</h2>

<p>僕はCoronaで同じくスパルタンXを作りました。
ちなみに、今回産まれて初めてゲーム作りました。
数字が苦手なので座標計算とかしないといけないイメージがあるゲームは、正直嫌煙してたんですが
Coronaを使うとその辺も勝手にやってくれるんですね、衝突判定も自動でやってくれたりして
つくづく物を作るための敷居って下がって来てるな〜と実感。</p>

<h4>作ったものはこんな感じになりました:</h4>

<p><img src="http://genki0406.github.com/images/spartanX_corona.png"></p>

<p>全然できてないですね、できない子ですいません(´；ω；｀)</p>

<p>アングリーバードを最初に作ったので、それをそのまま流用しながら改変して、
キャラクターを走らせ、障害物(豚)を定期的に出して、ボタンを押すと攻撃(バード)を出せるように
するところまでは行ったんですが、そこでタイムオーバー。
途中までしかできなかったのは悔しかったけど、初めてのゲーム作りは楽しかったです。</p>

<h2>最終日にAWSのLTしてきました</h2>

<p>最終日にはAWSのLTしてきました、途中デモがうまくいかず焦ってしまい
緊張もピークで終始早口でした、プレゼン練習してきます(/ω＼)</p>

<div style="width:425px" id="__ss_12637453"><iframe src="http://www.slideshare.net/slideshow/embed_code/12637453" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe> <div style="padding:5px 0 12px"> View more <a href="http://www.slideshare.net/" target="_blank">presentations</a> from <a href="http://www.slideshare.net/genta0406" target="_blank">Genki Fukusaki</a> </div> </div>


<p>そんなこんなであっという間に時間が過ぎ、終わってしまいました。
モノづくりってホント楽しいですね。
集まったメンバーもレベルの高い人ばかりで、勉強になったしいい刺激になりました。
またみんなで集まって何か作りましょう〜。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KAGOMUG勉強会]]></title>
    <link href="http://genki0406.github.com/blog/2012/03/24/kagomug-1/"/>
    <updated>2012-03-24T14:27:00+09:00</updated>
    <id>http://genki0406.github.com/blog/2012/03/24/kagomug-1</id>
    <content type="html"><![CDATA[<p>Kagomugの勉強会に参加して来たのでそのメモ</p>

<h2>MBC?につとめている方の話</h2>

<ul>
<li>4/20(金) 24:20 ~ 24:50 iPhoneだけでTV番組を作る</li>
<li>4/23(金) 24:20 ~ 24:50 再放送</li>
</ul>


<blockquote><p>番組を作るにあたり、音声が1番問題になる。<br />
Fostex AR-4iを使うとステレオで音声を取れる。<br />
iPhoneとFostexは借りて来た。<br /></p></blockquote>

<p>iPhoneだけでTV番組を作るって面白い！<br />
どこまで出来るのか必見です、興味のある方は是非見てみてください。<br /></p>

<h2>iBooks Author</h2>

<ul>
<li>iPad用の電子書籍を作るソフト</li>
<li>教科書を再発明</li>
<li>教科書が抱える問題を解決するソフト(携帯性、耐久性、インタラクティブ性、検索性、コンテンツの鮮度)</li>
<li>App Storeから無料で提供</li>
<li>iPadで見る事が前提なので、フォント、画面サイズに制限有り</li>
<li>使用出来るファイル形式に限りがある(Jpg, png, gif, MPEG-4)</li>
<li>練習問題が充実</li>
<li>基本的にiBookストアでの取り扱い</li>
<li>日本のiBookストアのアップロードはまだできません</li>
<li>世界を相手にした出版が出来ます</li>
<li>いつになるかは未定</li>
<li>武士道、京都、鹿児島とかいうタイトルで世界を相手に出版したら売れるかも！？</li>
<li>無料コンテンツならWebや自社サーバーから配布可能</li>
</ul>


<p>電子書籍を実際にiBooks Authorで作るデモを実際に見せてもらったけど<br />
簡単に動画とかのリッチコンテンツも埋める事が出来て、用意してあるテンプレートベースに<br />
作ってしまえば、すぐにそれなりの物が作れてしまいそうな感じ。<br />
個人的に本の中で動画が動いたりするのがインパクトありました、まさに未来の本って感じ。<br /></p>

<br />


<p>仕事で使うとしたら今はマニュアルくらいしか思いつかないけど<br />
学校の教本とかはどんどん電子化していくんだろうな〜。<br /></p>

<h2>参考サイト</h2>

<ul>
<li><a href="http://www.apple.com/jp/ibooks-author/">iBooks Author</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopressのデプロイ方法をメモ]]></title>
    <link href="http://genki0406.github.com/blog/2012/03/14/octopress-deploy/"/>
    <updated>2012-03-14T23:23:00+09:00</updated>
    <id>http://genki0406.github.com/blog/2012/03/14/octopress-deploy</id>
    <content type="html"><![CDATA[<p>記事の新規投稿<br /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post['title']</span></code></pre></td></tr></table></div></figure>


<p>記事を書いたらデプロイ(ちなみに記事の記述方法はMarkDown形式)<br /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake gen_deploy</span></code></pre></td></tr></table></div></figure>


<p>プレビューも見れる<br /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake previwe</span></code></pre></td></tr></table></div></figure>


<h2>参考サイト</h2>

<ul>
<li><a href="http://blog.glidenote.com/blog/2011/11/07/install-octopress-on-github/">GithubとOctopressでモダンな技術系ブログを作ってみる</a></li>
<li><a href="http://octopress.org/docs/">Octopressドキュメント</a></li>
<li><a href="http://blog.2310.net/archives/6">Markdown文法の全訳</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[記念すべき初投稿]]></title>
    <link href="http://genki0406.github.com/blog/2012/03/14/first-post/"/>
    <updated>2012-03-14T22:42:00+09:00</updated>
    <id>http://genki0406.github.com/blog/2012/03/14/first-post</id>
    <content type="html"><![CDATA[<p>  <a href="http://octopress.org/">octopress</a>とかいうやつでブログ作ってみました。<br />
  今はgithubと連携してブログまで書けちゃうんですね。<br />
  ブログ続いた事ないけど、今回の奴はデザインもいい感じだし続けられるかも！<br />
  形から入るって大事ですよね、頑張る！<br /></p>

<h2>参考サイト</h2>

<ul>
<li><a href="http://blog.glidenote.com/blog/2011/11/07/install-octopress-on-github/">GithubとOctopressでモダンな技術系ブログを作ってみる</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
